@startuml ConsoleApp
title ConsoleApp
namespace ConsoleApp{    
    class Program{
        +{static} Main(string[])
    }
    Program *--> ConsoleMastermind

    class ConsoleMastermind{
        ~ConsoleMastermind()
        -Start()
        #CreateGameView(StartController, PlayController, ResumeController) : GameView
    }
    ConsoleMastermind -up-|> Mastermind.Mastermind
    ConsoleMastermind *-right-> ConsoleView

    abstract Mastermind.Mastermind{        
    }

    class ConsoleView{
        ~ConsoleView(StartController, PlayController, ResumeControle) : base
        +Start()
        +Play()
        +Resume()
    }
    ConsoleView -up-|> GameViews.GameView
    ConsoleView ..> Controllers.StartController
    ConsoleView ..> Controllers.PlayController
    ConsoleView ..> Controllers.ResumeControle
    ConsoleView *--> StartView
    ConsoleView *--> PlayView
    ConsoleView *--> ResumeView

    class StartView{
        +StartView(StartController)
        ~Interact()
    }
    StartView --> Controllers.StartController
    StartView ..> MessageView
    StartView ..> GViews.MessageCode
    StartView ..> BoardView

    class MessageView{
        ~WriteLine(MessageCode)
        ~WriteLine(MessageCode, attempts)
        ~WriteLine(MessageCode, blacks, whites)        
    }
    MessageView --> GViews.MessageCode
    MessageView ..> ConsoleIO

    class BoardView{
        +BoardView()
        ~Write(Controller)
    }
    BoardView ..> Controllers.Controller
    BoardView ..> ProposedCombinationView
    BoardView ..> MessageView
    BoardView ..> GViews.MessageCode
    BoardView ..> ConsoleIO

    class ProposedCombinationView{
        ~Read(PlayController) : List<ColorCode>
        -GetColorCodes(characters) : List<ColorCode>
        -GetColorCodeBy(char) : ColorCode
        ~GetErrorCodeToProposedCombination(List<ColorCode>) : ErrorCode
        ~Write(List<ColorCode>)
    }
    ProposedCombinationView ..> Controllers.PlayController
    ProposedCombinationView ..> Types.ColorCode
    ProposedCombinationView ..> ErrorView
    ProposedCombinationView ..> Types.ErrorCode
    ProposedCombinationView ..> MessageView
    ProposedCombinationView ..> GViews.MessageCode
    ProposedCombinationView ..> ConsoleIO

    class ErrorView {
        ~WriteLine(ErrorCode)
    }
    ErrorView -up-|> GameViews.ErrorView
    ErrorView --> Types.ErrorCode
    ErrorView ..> ConsoleIO

    class PlayView{
        +PlayView(PlayController)
        ~Interact()
    }
    PlayView --> Controllers.PlayController
    PlayView ..> ProposedCombinationView
    PlayView ..> Types.ColorCode
    PlayView ..> GViews.MessageCode
    PlayView ..> BoardView
    PlayView ..> ConsoleIO

    class ResumeView{
        +ResumeView(ResumeController)
        ~Interact()
        -ReadAnswer() : bool
        -NewGame()
    }
    ResumeView --> Controllers.ResumeControle
    ResumeView ..> MessageView
    ResumeView ..> GViews.MessageCode
    ResumeView ..> YesNotDialog

    class YesNotDialog {

    }
    YesNotDialog ..> ConsoleIO

    

    abstract Mastermind.Mastermind{}

    abstract GameViews.GameView{}

    enum GViews.MessageCode{}
    
    enum Types.ColorCode{}

    enum Types.ErrorCode{}
}
@enduml