@startuml Controllers
title Controllers
namespace Controllers{
    abstract Controller{
        ~Controller(Game)
    }
    Controller --> Models.Game
    Controller <|-- StartController
    Controller <|-- PlayController
    Controller <|-- ResumeController

    class StartController{
        ~StartController(Game) : base(Game)
        ~NewGame()
    }
    StartController --> Models.Game

    class PlayController{
        ~PlayController(Game) : base(Game)
        ~GetAttempts() : int
        ~AddProposedCombination(List<ColorCode>)
        ~GetErrorCodeToProposedCombination(List<ColorCode>) : ErrorCode
        ~GetProposedCombination(position) : List<ColorCode>
        ~GetBlacks(position) : int
        ~GetWhites(position) : int
        ~IsFinished() : bool
        ~IsWinner() : bool
    }
    PlayController --> Models.Game


    class ResumeController{
        ~ResumeController(Game) : base(Game)
        ~NewGame()
    }
    ResumeController --> Models.Game

    class Logic{
        +Logic(Game)
        +NewGame()
        +GetAttempts() : int
        +AddProposedCombination(List<ColorCode>)
        +GetErrorCodeToProposedCombination(List<ColorCode>) : ErrorCode
        +GetProposedCombination(position) : List<ColorCode>
        +GetBlacks(position) : int
        +GetWhites(position) : int
        +IsFinished() : bool
        +IsWinner() : bool
    }
    Logic ..> Models.Game
    Logic *--> StartController
    Logic *--> PlayController
    Logic *--> ResumeController
}
@enduml