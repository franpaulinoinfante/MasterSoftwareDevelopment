@startuml Models
title Models
namespace Models{
    class Game{
        +Game()
        +NewGame()
        +GetState()  : StateCode
        +NextState() 
        +ResetState() 
        +Insert(colunm)
        +GetErrorCodeToInsert(colunm) : ErrorCode
        +GetToken(Coordinate) : Token
        +Next()
        +GetCurrentPlayer() : Player
        +IsFinished() : bool
        +IsWinner() : bool
        +IsTie() : bool
        +IsLooser() : bool
    }
    Game *--> Board
    Game *--> Turn
    Game *--> "2" Player
    Game *--> State
    Game ..> Types.ErrorCode
    Game ..> Types.Token
    Game ..> Types.Coordinate

    class Turn{
        -current : int
        ~Turn(Player[])
        ~Next()
        ~GetCurrentPlayer() : Player
    }
    Turn --> "2" Player

    class Player{
        ~Player(Board)
        ~Insert(Colunm)
        ~GetToken() : Token
        ~GetErrorCodeToInsert(Colunm)
    }
    Player --> Board
    Player ..> Types.ErrorCode
    Player ..> Types.Token

    class Board{
        ~Board()
        ~IsOccupied(Colunm) : bool
        ~Insert(Colunm, Token)
        ~GetToken(Coordinate) : Token
        ~IsWinner() : bool
        -GetDirections(Token) : List<Direction>
        -GetCoordinates(Token) : List<Coordinate>
    }
    Board *--> "6x7" Types.Token
    Board ..> Types.Coordinate
    Board ..> Types.Direction

    class State{
        +State()
        +GetState() : StateCode
        +Next() 
        +Reset()
    }
    State *--> Types.StateCode
}
@enduml